name: Build-Padavan-K2P

on: 
  repository_dispatch:
  workflow_dispatch:

  #schedule:
    #- cron: '0 16 * * 6'
    
env:
  REPO_URL: https://github.com/yer2018/Padavan-K2P
  TNAME: K2P
  KERNEL: 3.4
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: 创建编译空间挂载点
      run: |
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: 最大化编译空间
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 4096
        swap-size-mb: 1024
        temp-reserve-mb: 200
        build-mount-path: /workdir
        overprovision-lvm: 'true'
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'
        
    - name: 检查Actions
      uses: actions/checkout@v4
    
    - name: 检查服务器配置
      run: |
        echo "警告⚠"
        echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
        echo "云编译建议取消勾选Node.js及其相关插件！"
        echo "已知CPU型号（降序）：8370C,8272CL,8171M,E5系列"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "--------------------------硬盘信息--------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th
        
    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq install -y unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot \
        cpio git python3-docutils gettext automake autopoint texinfo build-essential help2man \
        pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        
    - name: 克隆源码
      working-directory: /workdir
      run: |
        git clone $REPO_URL --depth=1 rt-n56u
        ln -sf /workdir/rt-n56u $GITHUB_WORKSPACE/rt-n56u
        cd rt-n56u/toolchain-mipsel
        sh dl_toolchain.sh
        [ -d "/workdir/rt-n56u/toolchain-mipsel/toolchain-3.4.x" ] && sudo ln -svf /workdir/rt-n56u/toolchain-mipsel/toolchain-3.4.x /toolchain-3.4.x
        df -hT /workdir
        
    - name: 加载自定义配置
      run: |
        cd rt-n56u/trunk
        if [ ! -f configs/templates/$TNAME.config ] ; then
        echo "configs/templates/$TNAME.config not found "
        exit 1
        fi
        cp -f configs/templates/$TNAME.config .config
        #修改默认IP地址
        sed -i 's/192.168.2.1/10.10.10.1/g' ./user/shared/defaults.h
        sed -i 's/192.168.2.100/10.10.10.101/g' ./user/shared/defaults.h
        sed -i 's/192.168.2.244/10.10.10.199/g' ./user/shared/defaults.h
        #修改默认wifi密码
        #sed -i 's/1234567890/d' ./user/shared/defaults.h
        
        ################################################################################################
        #因不同型号配置功能不一样，所以先把配置项删除，如果你自己要添加其他的，也要写上删除这一条，切记！！！
        ################################################################################################
        
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER=y/CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER=n/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_MENTOHUST=y/CONFIG_FIRMWARE_INCLUDE_MENTOHUST=n/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT=y/CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT=n/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_SRELAY=y/CONFIG_FIRMWARE_INCLUDE_SRELAY=n/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_NJIT_CLIENT=y/CONFIG_FIRMWARE_INCLUDE_NJIT_CLIENT=n/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y/g' .config
        
        sed -i '/CONFIG_FIRMWARE_INCLUDE_TRANSMISSION/d' .config 
        sed -i '/CONFIG_FIRMWARE_INCLUDE_TRANSMISSION_WEB_CONTROL/d' .config
        #sed -i '/CONFIG_FIRMWARE_INCLUDE_ARIA/d' .config
        #sed -i '/CONFIG_FIRMWARE_INCLUDE_ARIA_WEB_CONTROL/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_ZEROTIER/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_FRPC/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_ALIDDNS/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_V2RAY/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_XRAY/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_TROJAN/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SSOBFS/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_SERVER/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CLIENT/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CMD/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_NPC/d' .config
        sed -i '/CONFIG_FIRMWARE_WEBUI_HIDE_VPN/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_OPENVPN/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_MSD_LITE/d' .config
        ######################################################################
        #以下选项是定义你需要的功能（y=集成,n=忽略），重新写入到.config文件
        ######################################################################
        ##内网穿透
        echo "CONFIG_FIRMWARE_INCLUDE_NPC=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=n" >> .config #zerotier ~1.3M
        echo "CONFIG_FIRMWARE_INCLUDE_FRPC=n" >> .config  #frpc
        #echo "CONFIG_FIRMWARE_INCLUDE_ALIDDNS=n" >> .config #aliddns
        ##科学上网##
        echo "CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_V2RAY=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_XRAY=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_TROJAN=n" >> .config
        ##vpn
        echo "CONFIG_FIRMWARE_INCLUDE_OPENVPN=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_SERVER=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CLIENT=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CMD=n" >> .config

        sed -i 's/CONFIG_FIRMWARE_INCLUDE_ARIA=n/CONFIG_FIRMWARE_INCLUDE_ARIA=y/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_ARIA_WEB_CONTROL=n/CONFIG_FIRMWARE_INCLUDE_ARIA_WEB_CONTROL=y/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_CIFS=n/CONFIG_FIRMWARE_INCLUDE_CIFS=y/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_DROPBEAR=n/CONFIG_FIRMWARE_INCLUDE_DROPBEAR=y/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_DROPBEAR_FAST_CODE=n/CONFIG_FIRMWARE_INCLUDE_DROPBEAR_FAST_CODE=y/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_CURL=y/CONFIG_FIRMWARE_INCLUDE_CURL=y/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_VLMCSD=y/CONFIG_FIRMWARE_INCLUDE_VLMCSD=n/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_TTYD=ys/CONFIG_FIRMWARE_INCLUDE_TTYD=n/g' .config
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_NANO=n/CONFIG_FIRMWARE_INCLUDE_NANO=y/g' .config
        echo "CONFIG_FIRMWARE_INCLUDE_DDNSGO=y" >> .config #ddndgo
        echo "CONFIG_FIRMWARE_INCLUDE_MSD_LITE=y" >> .config
        ###############################################################################
        ##########
        #自定义添加其它功能请参考源码configs/templates/目录下的config文件。按照上面的格式添加即可
        #格式如下：
        #sed -i '/自定义项/d' .config
        #echo "自定义项=y" >> .config
        #########################################################################################
        
        sed -i 's/\r//' .config

    - name: 编译固件
      run: |
        cd rt-n56u/trunk
        sudo ./clear_tree
        sudo ./build_firmware_modify $TNAME 0

    - name: 整理文件
      run: |
        df -Th /workdir
        mkdir /workdir/images
        cp rt-n56u/trunk/images/*.trx /workdir/images/K2P_`date +'%Y%m%d'`.trx
        ls -lh /workdir/images/

    - name : Upload packages
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: Padavan-packages
        path: /workdir/images

    - name: 发布固件
      uses: ncipollo/release-action@v1
      with:
        tag: padavan_K2P
        artifacts: /workdir/images/*
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          默认IP地址：10.10.10.1 

    - name: 清理Actions空间
      uses: Mattraks/delete-workflow-runs@main
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          keep_minimum_runs: 0
          retain_days: 7
          #retain_days: ${{ github.event.inputs.action_days }}
    
    - name: 删除多余releases
      uses: dev-drprasad/delete-older-releases@master
      with:
        repo: ${{ github.repository }}
        keep_latest: 5
        #keep_latest: ${{ github.event.inputs.rele }}
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
